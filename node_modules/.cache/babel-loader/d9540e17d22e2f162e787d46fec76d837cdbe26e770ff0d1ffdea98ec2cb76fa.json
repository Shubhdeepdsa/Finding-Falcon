{"ast":null,"code":"var _jsxFileName = \"/workspaces/Finding-Falcon/src/Components/FalconMenu.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState, useMemo } from \"react\";\nimport \"./FalconMenu.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FalconMenu = props => {\n  _s();\n  const [planetData, setPlanetData] = useState([]);\n  const [vehicleData, setVehicleData] = useState([]);\n  const [token, setToken] = useState(\"\");\n  const [selectedPairs, setSelectedPairs] = useState([]);\n  const [timeTaken, setTimeTaken] = useState([0, 0, 0, 0]);\n  const [selectedPlanets, setSelectedPlanets] = useState([]);\n  const {\n    setResult\n  } = props;\n  const planetUrl = \"https://findfalcone.geektrust.com/planets\";\n  const vehicleUrl = \"https://findfalcone.geektrust.com/vehicles\";\n  const tokenUrl = \"https://findfalcone.geektrust.com/token\";\n  const falconFindUrl = \"https://findfalcone.geektrust.com/find\";\n  const memoizedPlanetData = useMemo(() => planetData, [planetData]);\n  const memoizedSelectedPairs = useMemo(() => selectedPairs, [selectedPairs]);\n  const getPlanetData = async () => {\n    try {\n      const response = await fetch(planetUrl);\n      const data = await response.json();\n      setPlanetData([...data]);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const getVehicleData = async () => {\n    try {\n      const response = await fetch(vehicleUrl);\n      const data = await response.json();\n      setVehicleData([...data]);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const getTokenData = async () => {\n    try {\n      const response = await fetch(tokenUrl, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\"\n        }\n      });\n      const data = await response.json();\n      setToken(data.token);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  // const handlePlanetChange = (index, value) => {\n  //   setSelectedPairs((prevSelectedPairs) => {\n  //     const updatedPairs = [...prevSelectedPairs];\n  //     updatedPairs[index] = { planet: value, vehicle: \"\" };\n  //     setTimeTaken((prevTimeTaken) => {\n  //       const updatedTimeTaken = [...prevTimeTaken];\n  //       updatedTimeTaken[index] = calculateTimeTaken(updatedPairs[index]);\n  //       return updatedTimeTaken;\n  //     });\n\n  //     const updatedSelectedPlanets = [...selectedPlanets];\n  //     updatedSelectedPlanets[index] = value;\n  //     setSelectedPlanets(updatedSelectedPlanets);\n\n  //     return updatedPairs;\n  //   });\n  // };\n  const handlePlanetChange = (index, value, event) => {\n    event.preventDefault();\n    setSelectedPairs(prevSelectedPairs => {\n      const updatedPairs = [...prevSelectedPairs];\n      updatedPairs[index] = {\n        planet: value,\n        vehicle: \"\"\n      };\n      setTimeTaken(prevTimeTaken => {\n        const updatedTimeTaken = [...prevTimeTaken];\n        updatedTimeTaken[index] = calculateTimeTaken(updatedPairs[index]);\n        return updatedTimeTaken;\n      });\n\n      // Update the selected planet in the selectedPairs array\n      return updatedPairs;\n    });\n\n    // No need to remove the selected planet from planetData\n\n    // Update the planetData state (optional, if needed)\n    const updatedPlanetData = planetData.map(planet => {\n      if (planet.name === value) {\n        return {\n          ...planet,\n          selected: true\n        };\n      }\n      return planet;\n    });\n    setPlanetData(updatedPlanetData);\n  };\n  const handleVehicleChange = (index, value) => {\n    setSelectedPairs(prevSelectedPairs => {\n      const updatedPairs = [...prevSelectedPairs];\n      updatedPairs[index] = {\n        ...updatedPairs[index],\n        vehicle: value\n      };\n      setTimeTaken(prevTimeTaken => {\n        const updatedTimeTaken = [...prevTimeTaken];\n        updatedTimeTaken[index] = calculateTimeTaken(updatedPairs[index]);\n        return updatedTimeTaken;\n      });\n      return updatedPairs;\n    });\n  };\n  const getAvailableVehicle = (planetName, vehicleName) => {\n    const selectedVehicleCount = selectedPairs.filter(pair => pair.vehicle === vehicleName).length;\n    const planet = planetData.find(planet => planet.name === planetName);\n    const planetDistance = planet ? planet.distance : 0;\n    const totalVehicleCount = vehicleData.filter(vehicle => vehicle.name === vehicleName && vehicle.max_distance >= planetDistance).length;\n    return totalVehicleCount - selectedVehicleCount;\n  };\n  const handleSearch = async event => {\n    event.preventDefault();\n    const planetNames = selectedPairs.map(pair => pair.planet);\n    const vehicleNames = selectedPairs.map(pair => pair.vehicle);\n    const requestBody = {\n      token: token,\n      planet_names: planetNames,\n      vehicle_names: vehicleNames\n    };\n    try {\n      const response = await fetch(falconFindUrl, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data);\n        setResult([data]);\n      } else {\n        throw new Error(\"Error in request\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const calculateTimeTaken = pair => {\n    if (!pair || !pair.planet || !pair.vehicle) {\n      return 0;\n    }\n    const selectedPlanets = planetData.find(planet => planet.name === pair.planet);\n    const selectedVehicles = vehicleData.find(vehicle => vehicle.name === pair.vehicle);\n    if (!selectedPlanets || !selectedVehicles) {\n      return 0;\n    }\n    const timeTaken = selectedPlanets.distance / selectedVehicles.speed;\n    return timeTaken;\n  };\n  useEffect(() => {\n    getPlanetData();\n    getVehicleData();\n    getTokenData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"full-menu\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSearch,\n          children: [[0, 1, 2, 3].map(index => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-column\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Select Planet \", index + 1, \":\", console.log('This is label', selectedPairs[index] ? selectedPairs[index].planet : \"\"), /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: selectedPairs[index] && selectedPairs[index].planet,\n                  onChange: e => handlePlanetChange(index, e.target.value, e),\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select planet\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 23\n                  }, this), planetData.map(planet => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: planet.name,\n                    children: planet.name\n                  }, planet.name, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-column\",\n              children: selectedPairs[index] ? selectedPairs[index].planet && /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Select Vehicle :\", /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: selectedPairs[index] ? selectedPairs[index].vehicle : \"\",\n                  onChange: e => handleVehicleChange(index, e.target.value),\n                  required: true,\n                  disabled: selectedPairs[index] ? selectedPairs[index].vehicle : \"\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select vehicle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 27\n                  }, this), vehicleData.filter(vehicle => {\n                    const selectedPlanet = planetData.find(planet => planet.name === (selectedPairs[index] && selectedPairs[index].planet));\n                    return vehicle.max_distance >= (selectedPlanet ? selectedPlanet.distance : 0);\n                  }).map(vehicle => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: vehicle.name,\n                    children: vehicle.name\n                  }, vehicle.name, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 31\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 23\n              }, this) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-column\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-column time\",\n              children: [\"Total Time: \", timeTaken.reduce((sum, time) => sum + time, 0)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n_s(FalconMenu, \"l73X9jluHleJNgPsfTjIE2gqdHs=\");\n_c = FalconMenu;\nexport default FalconMenu;\nvar _c;\n$RefreshReg$(_c, \"FalconMenu\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","jsxDEV","_jsxDEV","FalconMenu","props","_s","planetData","setPlanetData","vehicleData","setVehicleData","token","setToken","selectedPairs","setSelectedPairs","timeTaken","setTimeTaken","selectedPlanets","setSelectedPlanets","setResult","planetUrl","vehicleUrl","tokenUrl","falconFindUrl","memoizedPlanetData","memoizedSelectedPairs","getPlanetData","response","fetch","data","json","error","console","getVehicleData","getTokenData","method","headers","Accept","handlePlanetChange","index","value","event","preventDefault","prevSelectedPairs","updatedPairs","planet","vehicle","prevTimeTaken","updatedTimeTaken","calculateTimeTaken","updatedPlanetData","map","name","selected","handleVehicleChange","getAvailableVehicle","planetName","vehicleName","selectedVehicleCount","filter","pair","length","find","planetDistance","distance","totalVehicleCount","max_distance","handleSearch","planetNames","vehicleNames","requestBody","planet_names","vehicle_names","body","JSON","stringify","ok","log","Error","selectedVehicles","speed","className","children","onSubmit","onChange","e","target","required","fileName","_jsxFileName","lineNumber","columnNumber","disabled","selectedPlanet","type","reduce","sum","time","_c","$RefreshReg$"],"sources":["/workspaces/Finding-Falcon/src/Components/FalconMenu.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState, useMemo } from \"react\";\r\nimport \"./FalconMenu.css\";\r\nconst FalconMenu = (props) => {\r\n  const [planetData, setPlanetData] = useState([]);\r\n  const [vehicleData, setVehicleData] = useState([]);\r\n  const [token, setToken] = useState(\"\");\r\n  const [selectedPairs, setSelectedPairs] = useState([]);\r\n  const [timeTaken, setTimeTaken] = useState([0, 0, 0, 0]);\r\n  const [selectedPlanets, setSelectedPlanets] = useState([]);\r\n  const { setResult } = props;\r\n  const planetUrl = \"https://findfalcone.geektrust.com/planets\";\r\n  const vehicleUrl = \"https://findfalcone.geektrust.com/vehicles\";\r\n  const tokenUrl = \"https://findfalcone.geektrust.com/token\";\r\n  const falconFindUrl = \"https://findfalcone.geektrust.com/find\";\r\n  const memoizedPlanetData = useMemo(() => planetData, [planetData]);\r\n  const memoizedSelectedPairs = useMemo(() => selectedPairs, [selectedPairs]);\r\n  const getPlanetData = async () => {\r\n    try {\r\n      const response = await fetch(planetUrl);\r\n      const data = await response.json();\r\n      setPlanetData([...data]);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const getVehicleData = async () => {\r\n    try {\r\n      const response = await fetch(vehicleUrl);\r\n      const data = await response.json();\r\n      setVehicleData([...data]);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const getTokenData = async () => {\r\n    try {\r\n      const response = await fetch(tokenUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      setToken(data.token);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n  // const handlePlanetChange = (index, value) => {\r\n  //   setSelectedPairs((prevSelectedPairs) => {\r\n  //     const updatedPairs = [...prevSelectedPairs];\r\n  //     updatedPairs[index] = { planet: value, vehicle: \"\" };\r\n  //     setTimeTaken((prevTimeTaken) => {\r\n  //       const updatedTimeTaken = [...prevTimeTaken];\r\n  //       updatedTimeTaken[index] = calculateTimeTaken(updatedPairs[index]);\r\n  //       return updatedTimeTaken;\r\n  //     });\r\n\r\n  //     const updatedSelectedPlanets = [...selectedPlanets];\r\n  //     updatedSelectedPlanets[index] = value;\r\n  //     setSelectedPlanets(updatedSelectedPlanets);\r\n\r\n  //     return updatedPairs;\r\n  //   });\r\n  // };\r\n  const handlePlanetChange = (index, value, event) => {\r\n    event.preventDefault();\r\n    setSelectedPairs((prevSelectedPairs) => {\r\n      const updatedPairs = [...prevSelectedPairs];\r\n      updatedPairs[index] = { planet: value, vehicle: \"\" };\r\n\r\n      setTimeTaken((prevTimeTaken) => {\r\n        const updatedTimeTaken = [...prevTimeTaken];\r\n        updatedTimeTaken[index] = calculateTimeTaken(updatedPairs[index]);\r\n        return updatedTimeTaken;\r\n      });\r\n\r\n      // Update the selected planet in the selectedPairs array\r\n      return updatedPairs;\r\n    });\r\n\r\n    // No need to remove the selected planet from planetData\r\n\r\n    // Update the planetData state (optional, if needed)\r\n    const updatedPlanetData = planetData.map((planet) => {\r\n      if (planet.name === value) {\r\n        return { ...planet, selected: true };\r\n      }\r\n      return planet;\r\n    });\r\n    setPlanetData(updatedPlanetData);\r\n  };\r\n\r\n  const handleVehicleChange = (index, value) => {\r\n    setSelectedPairs((prevSelectedPairs) => {\r\n      const updatedPairs = [...prevSelectedPairs];\r\n      updatedPairs[index] = { ...updatedPairs[index], vehicle: value };\r\n      setTimeTaken((prevTimeTaken) => {\r\n        const updatedTimeTaken = [...prevTimeTaken];\r\n        updatedTimeTaken[index] = calculateTimeTaken(updatedPairs[index]);\r\n        return updatedTimeTaken;\r\n      });\r\n      return updatedPairs;\r\n    });\r\n  };\r\n  const getAvailableVehicle = (planetName, vehicleName) => {\r\n    const selectedVehicleCount = selectedPairs.filter(\r\n      (pair) => pair.vehicle === vehicleName\r\n    ).length;\r\n    const planet = planetData.find((planet) => planet.name === planetName);\r\n    const planetDistance = planet ? planet.distance : 0;\r\n    const totalVehicleCount = vehicleData.filter(\r\n      (vehicle) =>\r\n        vehicle.name === vehicleName && vehicle.max_distance >= planetDistance\r\n    ).length;\r\n\r\n    return totalVehicleCount - selectedVehicleCount;\r\n  };\r\n  const handleSearch = async (event) => {\r\n    event.preventDefault();\r\n    const planetNames = selectedPairs.map((pair) => pair.planet);\r\n    const vehicleNames = selectedPairs.map((pair) => pair.vehicle);\r\n    const requestBody = {\r\n      token: token,\r\n      planet_names: planetNames,\r\n      vehicle_names: vehicleNames,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(falconFindUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(requestBody),\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log(data);\r\n        setResult([data]);\r\n      } else {\r\n        throw new Error(\"Error in request\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const calculateTimeTaken = (pair) => {\r\n    if (!pair || !pair.planet || !pair.vehicle) {\r\n      return 0;\r\n    }\r\n\r\n    const selectedPlanets = planetData.find(\r\n      (planet) => planet.name === pair.planet\r\n    );\r\n    const selectedVehicles = vehicleData.find(\r\n      (vehicle) => vehicle.name === pair.vehicle\r\n    );\r\n\r\n    if (!selectedPlanets || !selectedVehicles) {\r\n      return 0;\r\n    }\r\n    const timeTaken = selectedPlanets.distance / selectedVehicles.speed;\r\n    return timeTaken;\r\n  };\r\n  useEffect(() => {\r\n    getPlanetData();\r\n    getVehicleData();\r\n    getTokenData();\r\n  }, []);\r\n  return (\r\n    <div className=\"full-menu\">\r\n      <div className=\"menu-wrapper\">\r\n        <div className=\"menu\">\r\n          <form onSubmit={handleSearch}>\r\n            {[0, 1, 2, 3].map((index) => (\r\n              <div key={index} className=\"form-row\">\r\n                <div className=\"form-column\">\r\n                  <label>\r\n                    Select Planet {index + 1}:\r\n                    {console.log('This is label', selectedPairs[index] ? selectedPairs[index].planet : \"\")}\r\n                    <select\r\n                      value={\r\n                        selectedPairs[index] && selectedPairs[index].planet\r\n                      }\r\n                      onChange={(e) =>\r\n                        handlePlanetChange(index, e.target.value, e)\r\n                      }\r\n                      required\r\n                    >\r\n                      <option value=\"\">Select planet</option>\r\n                      {planetData.map((planet) => (\r\n                        <option key={planet.name} value={planet.name}>\r\n                          {planet.name}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </label>\r\n                </div>\r\n                <div className=\"form-column\">\r\n                  {selectedPairs[index]\r\n                    ? selectedPairs[index].planet && (\r\n                      <label>\r\n                        Select Vehicle :\r\n                        <select\r\n                          value={\r\n                            selectedPairs[index]\r\n                              ? selectedPairs[index].vehicle\r\n                              : \"\"\r\n                          }\r\n                          onChange={(e) =>\r\n                            handleVehicleChange(index, e.target.value)\r\n                          }\r\n                          required\r\n                          disabled={\r\n                            selectedPairs[index]\r\n                              ? selectedPairs[index].vehicle\r\n                              : \"\"\r\n                          }\r\n                        >\r\n                          <option value=\"\">Select vehicle</option>\r\n                          {vehicleData\r\n                            .filter((vehicle) => {\r\n                              const selectedPlanet = planetData.find(\r\n                                (planet) =>\r\n                                  planet.name ===\r\n                                  (selectedPairs[index] &&\r\n                                    selectedPairs[index].planet)\r\n                              );\r\n                              return (\r\n                                vehicle.max_distance >=\r\n                                (selectedPlanet ? selectedPlanet.distance : 0)\r\n                              );\r\n                            })\r\n                            .map((vehicle) => (\r\n                              <option key={vehicle.name} value={vehicle.name}>\r\n                                {vehicle.name}\r\n                              </option>\r\n                            ))}\r\n                        </select>\r\n                      </label>\r\n                    )\r\n                    : null}\r\n                </div>\r\n              </div>\r\n            ))}\r\n            <div className=\"form-row\">\r\n              <div className=\"form-column\">\r\n                <button type=\"submit\">Search</button>\r\n              </div>\r\n              <div className=\"form-column time\">\r\n                Total Time: {timeTaken.reduce((sum, time) => sum + time, 0)}\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FalconMenu;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}