{"ast":null,"code":"import _objectSpread from\"/workspaces/Finding-Falcon/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"/workspaces/Finding-Falcon/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _toConsumableArray from\"/workspaces/Finding-Falcon/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"/workspaces/Finding-Falcon/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/workspaces/Finding-Falcon/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import{useEffect}from\"react\";import{useState,useMemo}from\"react\";import\"./FalconMenu.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FalconMenu=function FalconMenu(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),planetData=_useState2[0],setPlanetData=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),vehicleData=_useState4[0],setVehicleData=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),token=_useState6[0],setToken=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),selectedPairs=_useState8[0],setSelectedPairs=_useState8[1];var _useState9=useState([0,0,0,0]),_useState10=_slicedToArray(_useState9,2),timeTaken=_useState10[0],setTimeTaken=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),selectedPlanets=_useState12[0],setSelectedPlanets=_useState12[1];var setResult=props.setResult;var planetUrl=\"https://findfalcone.geektrust.com/planets\";var vehicleUrl=\"https://findfalcone.geektrust.com/vehicles\";var tokenUrl=\"https://findfalcone.geektrust.com/token\";var falconFindUrl=\"https://findfalcone.geektrust.com/find\";var memoizedPlanetData=useMemo(function(){return planetData;},[planetData]);var memoizedSelectedPairs=useMemo(function(){return selectedPairs;},[selectedPairs]);var getPlanetData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(planetUrl);case 3:response=_context.sent;_context.next=6;return response.json();case 6:data=_context.sent;setPlanetData(_toConsumableArray(data));_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 13:case\"end\":return _context.stop();}},_callee,null,[[0,10]]);}));return function getPlanetData(){return _ref.apply(this,arguments);};}();var getVehicleData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var response,data;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return fetch(vehicleUrl);case 3:response=_context2.sent;_context2.next=6;return response.json();case 6:data=_context2.sent;setVehicleData(_toConsumableArray(data));_context2.next=13;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](0);console.error(_context2.t0);case 13:case\"end\":return _context2.stop();}},_callee2,null,[[0,10]]);}));return function getVehicleData(){return _ref2.apply(this,arguments);};}();var getTokenData=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var response,data;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(tokenUrl,{method:\"POST\",headers:{Accept:\"application/json\"}});case 3:response=_context3.sent;_context3.next=6;return response.json();case 6:data=_context3.sent;setToken(data.token);_context3.next=13;break;case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](0);console.error(\"Error:\",_context3.t0);case 13:case\"end\":return _context3.stop();}},_callee3,null,[[0,10]]);}));return function getTokenData(){return _ref3.apply(this,arguments);};}();// const handlePlanetChange = (index, value) => {\n//   setSelectedPairs((prevSelectedPairs) => {\n//     const updatedPairs = [...prevSelectedPairs];\n//     updatedPairs[index] = { planet: value, vehicle: \"\" };\n//     setTimeTaken((prevTimeTaken) => {\n//       const updatedTimeTaken = [...prevTimeTaken];\n//       updatedTimeTaken[index] = calculateTimeTaken(updatedPairs[index]);\n//       return updatedTimeTaken;\n//     });\n//     const updatedSelectedPlanets = [...selectedPlanets];\n//     updatedSelectedPlanets[index] = value;\n//     setSelectedPlanets(updatedSelectedPlanets);\n//     return updatedPairs;\n//   });\n// };\nvar handlePlanetChange=function handlePlanetChange(index,value,event){event.preventDefault(event);setSelectedPairs(function(prevSelectedPairs){var updatedPairs=_toConsumableArray(prevSelectedPairs);updatedPairs[index]={planet:value,vehicle:\"\"};setTimeTaken(function(prevTimeTaken){var updatedTimeTaken=_toConsumableArray(prevTimeTaken);updatedTimeTaken[index]=calculateTimeTaken(updatedPairs[index]);return updatedTimeTaken;});return updatedPairs;});// Remove the selected planet from the dropdown options\nvar updatedPlanetData=memoizedPlanetData.filter(function(planet){return planet.name!==value;});setPlanetData(updatedPlanetData);};var handleVehicleChange=function handleVehicleChange(index,value){setSelectedPairs(function(prevSelectedPairs){var updatedPairs=_toConsumableArray(prevSelectedPairs);updatedPairs[index]=_objectSpread(_objectSpread({},updatedPairs[index]),{},{vehicle:value});setTimeTaken(function(prevTimeTaken){var updatedTimeTaken=_toConsumableArray(prevTimeTaken);updatedTimeTaken[index]=calculateTimeTaken(updatedPairs[index]);return updatedTimeTaken;});return updatedPairs;});};var getAvailableVehicle=function getAvailableVehicle(planetName,vehicleName){var selectedVehicleCount=selectedPairs.filter(function(pair){return pair.vehicle===vehicleName;}).length;var planet=planetData.find(function(planet){return planet.name===planetName;});var planetDistance=planet?planet.distance:0;var totalVehicleCount=vehicleData.filter(function(vehicle){return vehicle.name===vehicleName&&vehicle.max_distance>=planetDistance;}).length;return totalVehicleCount-selectedVehicleCount;};var handleSearch=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(event){var planetNames,vehicleNames,requestBody,response,data;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:event.preventDefault();planetNames=selectedPairs.map(function(pair){return pair.planet;});vehicleNames=selectedPairs.map(function(pair){return pair.vehicle;});requestBody={token:token,planet_names:planetNames,vehicle_names:vehicleNames};_context4.prev=4;_context4.next=7;return fetch(falconFindUrl,{method:\"POST\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"},body:JSON.stringify(requestBody)});case 7:response=_context4.sent;if(!response.ok){_context4.next=16;break;}_context4.next=11;return response.json();case 11:data=_context4.sent;console.log(data);setResult([data]);_context4.next=17;break;case 16:throw new Error(\"Error in request\");case 17:_context4.next=22;break;case 19:_context4.prev=19;_context4.t0=_context4[\"catch\"](4);console.error(_context4.t0);case 22:case\"end\":return _context4.stop();}},_callee4,null,[[4,19]]);}));return function handleSearch(_x){return _ref4.apply(this,arguments);};}();var calculateTimeTaken=function calculateTimeTaken(pair){if(!pair||!pair.planet||!pair.vehicle){return 0;}var selectedPlanets=planetData.find(function(planet){return planet.name===pair.planet;});var selectedVehicles=vehicleData.find(function(vehicle){return vehicle.name===pair.vehicle;});if(!selectedPlanets||!selectedVehicles){return 0;}var timeTaken=selectedPlanets.distance/selectedVehicles.speed;return timeTaken;};useEffect(function(){getPlanetData();getVehicleData();getTokenData();},[]);useEffect(function(){console.log(selectedPairs);},[selectedPairs]);return/*#__PURE__*/_jsx(\"div\",{className:\"full-menu\",children:/*#__PURE__*/_jsx(\"div\",{className:\"menu-wrapper\",children:/*#__PURE__*/_jsx(\"div\",{className:\"menu\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSearch,children:[[0,1,2,3].map(function(index){return/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"form-column\",children:/*#__PURE__*/_jsxs(\"label\",{children:[\"Select Planet \",index+1,\":\",console.log('This is label',selectedPairs[index]?selectedPairs[index].planet:\"\"),/*#__PURE__*/_jsxs(\"select\",{value:selectedPairs[index]&&selectedPairs[index].planet,onChange:function onChange(e){return handlePlanetChange(index,e.target.value,e);},required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select planet\"}),planetData.map(function(planet){return/*#__PURE__*/_jsx(\"option\",{value:planet.name,children:planet.name},planet.name);})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-column\",children:selectedPairs[index]?selectedPairs[index].planet&&/*#__PURE__*/_jsxs(\"label\",{children:[\"Select Vehicle for\",\" \",selectedPairs[index]&&selectedPairs[index].planet,\":\",/*#__PURE__*/_jsxs(\"select\",{value:selectedPairs[index]?selectedPairs[index].vehicle:\"\",onChange:function onChange(e){return handleVehicleChange(index,e.target.value);},required:true,disabled:selectedPairs[index]?selectedPairs[index].vehicle:\"\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select vehicle\"}),vehicleData.filter(function(vehicle){var selectedPlanet=planetData.find(function(planet){return planet.name===(selectedPairs[index]&&selectedPairs[index].planet);});return vehicle.max_distance>=(selectedPlanet?selectedPlanet.distance:0);}).map(function(vehicle){return/*#__PURE__*/_jsxs(\"option\",{value:vehicle.name,children:[vehicle.name,\" x\",getAvailableVehicle(selectedPairs[index]?selectedPairs[index].planet:null,vehicle.name)]},vehicle.name);})]})]}):null})]},index);}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"form-column\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Search\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-column time\",children:[\"Total Time: \",timeTaken.reduce(function(sum,time){return sum+time;},0)]})]})]})})})});};export default FalconMenu;","map":{"version":3,"names":["React","useEffect","useState","useMemo","jsx","_jsx","jsxs","_jsxs","FalconMenu","props","_useState","_useState2","_slicedToArray","planetData","setPlanetData","_useState3","_useState4","vehicleData","setVehicleData","_useState5","_useState6","token","setToken","_useState7","_useState8","selectedPairs","setSelectedPairs","_useState9","_useState10","timeTaken","setTimeTaken","_useState11","_useState12","selectedPlanets","setSelectedPlanets","setResult","planetUrl","vehicleUrl","tokenUrl","falconFindUrl","memoizedPlanetData","memoizedSelectedPairs","getPlanetData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_callee$","_context","prev","next","fetch","sent","json","_toConsumableArray","t0","console","error","stop","apply","arguments","getVehicleData","_ref2","_callee2","_callee2$","_context2","getTokenData","_ref3","_callee3","_callee3$","_context3","method","headers","Accept","handlePlanetChange","index","value","event","preventDefault","prevSelectedPairs","updatedPairs","planet","vehicle","prevTimeTaken","updatedTimeTaken","calculateTimeTaken","updatedPlanetData","filter","name","handleVehicleChange","_objectSpread","getAvailableVehicle","planetName","vehicleName","selectedVehicleCount","pair","length","find","planetDistance","distance","totalVehicleCount","max_distance","handleSearch","_ref4","_callee4","planetNames","vehicleNames","requestBody","_callee4$","_context4","map","planet_names","vehicle_names","body","JSON","stringify","ok","log","Error","_x","selectedVehicles","speed","className","children","onSubmit","onChange","e","target","required","disabled","selectedPlanet","type","reduce","sum","time"],"sources":["/workspaces/Finding-Falcon/src/Components/FalconMenu.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState , useMemo} from \"react\";\r\nimport \"./FalconMenu.css\";\r\nconst FalconMenu = (props) => {\r\n  const [planetData, setPlanetData] = useState([]);\r\n  const [vehicleData, setVehicleData] = useState([]);\r\n  const [token, setToken] = useState(\"\");\r\n  const [selectedPairs, setSelectedPairs] = useState([]);\r\n  const [timeTaken, setTimeTaken] = useState([0, 0, 0, 0]);\r\n  const [selectedPlanets, setSelectedPlanets] = useState([]);\r\n  const { setResult } = props;\r\n  const planetUrl = \"https://findfalcone.geektrust.com/planets\";\r\n  const vehicleUrl = \"https://findfalcone.geektrust.com/vehicles\";\r\n  const tokenUrl = \"https://findfalcone.geektrust.com/token\";\r\n  const falconFindUrl = \"https://findfalcone.geektrust.com/find\";\r\n  const memoizedPlanetData = useMemo(() => planetData, [planetData]);\r\n  const memoizedSelectedPairs = useMemo(() => selectedPairs, [selectedPairs]);\r\n  const getPlanetData = async () => {\r\n    try {\r\n      const response = await fetch(planetUrl);\r\n      const data = await response.json();\r\n      setPlanetData([...data]);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const getVehicleData = async () => {\r\n    try {\r\n      const response = await fetch(vehicleUrl);\r\n      const data = await response.json();\r\n      setVehicleData([...data]);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const getTokenData = async () => {\r\n    try {\r\n      const response = await fetch(tokenUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      setToken(data.token);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n  // const handlePlanetChange = (index, value) => {\r\n  //   setSelectedPairs((prevSelectedPairs) => {\r\n  //     const updatedPairs = [...prevSelectedPairs];\r\n  //     updatedPairs[index] = { planet: value, vehicle: \"\" };\r\n  //     setTimeTaken((prevTimeTaken) => {\r\n  //       const updatedTimeTaken = [...prevTimeTaken];\r\n  //       updatedTimeTaken[index] = calculateTimeTaken(updatedPairs[index]);\r\n  //       return updatedTimeTaken;\r\n  //     });\r\n\r\n  //     const updatedSelectedPlanets = [...selectedPlanets];\r\n  //     updatedSelectedPlanets[index] = value;\r\n  //     setSelectedPlanets(updatedSelectedPlanets);\r\n\r\n  //     return updatedPairs;\r\n  //   });\r\n  // };\r\n  const handlePlanetChange = (index, value, event) => {\r\n    event.preventDefault(event);\r\n    setSelectedPairs((prevSelectedPairs) => {\r\n      const updatedPairs = [...prevSelectedPairs];\r\n      updatedPairs[index] = { planet: value, vehicle: \"\" };\r\n  \r\n      setTimeTaken((prevTimeTaken) => {\r\n        const updatedTimeTaken = [...prevTimeTaken];\r\n        updatedTimeTaken[index] = calculateTimeTaken(updatedPairs[index]);\r\n        return updatedTimeTaken;\r\n      });\r\n  \r\n      return updatedPairs;\r\n    });\r\n  \r\n    // Remove the selected planet from the dropdown options\r\n    const updatedPlanetData = memoizedPlanetData.filter((planet) => planet.name !== value);\r\n    setPlanetData(updatedPlanetData);\r\n  };\r\n\r\n  const handleVehicleChange = (index, value) => {\r\n    setSelectedPairs((prevSelectedPairs) => {\r\n      const updatedPairs = [...prevSelectedPairs];\r\n      updatedPairs[index] = { ...updatedPairs[index], vehicle: value };\r\n      setTimeTaken((prevTimeTaken) => {\r\n        const updatedTimeTaken = [...prevTimeTaken];\r\n        updatedTimeTaken[index] = calculateTimeTaken(updatedPairs[index]);\r\n        return updatedTimeTaken;\r\n      });\r\n      return updatedPairs;\r\n    });\r\n  };\r\n  const getAvailableVehicle = (planetName, vehicleName) => {\r\n    const selectedVehicleCount = selectedPairs.filter(\r\n      (pair) => pair.vehicle === vehicleName\r\n    ).length;\r\n\r\n    const planet = planetData.find((planet) => planet.name === planetName);\r\n    const planetDistance = planet ? planet.distance : 0;\r\n\r\n    const totalVehicleCount = vehicleData.filter(\r\n      (vehicle) =>\r\n        vehicle.name === vehicleName && vehicle.max_distance >= planetDistance\r\n    ).length;\r\n\r\n    return totalVehicleCount - selectedVehicleCount;\r\n  };\r\n  const handleSearch = async (event) => {\r\n    event.preventDefault();\r\n    const planetNames = selectedPairs.map((pair) => pair.planet);\r\n    const vehicleNames = selectedPairs.map((pair) => pair.vehicle);\r\n\r\n    const requestBody = {\r\n      token: token,\r\n      planet_names: planetNames,\r\n      vehicle_names: vehicleNames,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(falconFindUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(requestBody),\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log(data);\r\n        setResult([data]);\r\n      } else {\r\n        throw new Error(\"Error in request\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const calculateTimeTaken = (pair) => {\r\n    if (!pair || !pair.planet || !pair.vehicle) {\r\n      return 0;\r\n    }\r\n\r\n    const selectedPlanets = planetData.find(\r\n      (planet) => planet.name === pair.planet\r\n    );\r\n    const selectedVehicles = vehicleData.find(\r\n      (vehicle) => vehicle.name === pair.vehicle\r\n    );\r\n\r\n    if (!selectedPlanets || !selectedVehicles) {\r\n      return 0;\r\n    }\r\n    const timeTaken = selectedPlanets.distance / selectedVehicles.speed;\r\n    return timeTaken;\r\n  };\r\n  useEffect(() => {\r\n    getPlanetData();\r\n    getVehicleData();\r\n    getTokenData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(selectedPairs)\r\n  }, [selectedPairs] )\r\n  return (\r\n    <div className=\"full-menu\">\r\n      <div className=\"menu-wrapper\">\r\n        <div className=\"menu\">\r\n          <form onSubmit={handleSearch}>\r\n            {[0, 1, 2, 3].map((index) => (\r\n              <div key={index} className=\"form-row\">\r\n                <div className=\"form-column\">\r\n                  <label>\r\n                    Select Planet {index + 1}:\r\n                    {console.log('This is label',selectedPairs[index] ? selectedPairs[index].planet : \"\")}\r\n                    <select\r\n                      value={\r\n                        selectedPairs[index] && selectedPairs[index].planet\r\n                      }\r\n                      onChange={(e) =>\r\n                        handlePlanetChange(index, e.target.value, e)\r\n                      }\r\n                      required\r\n                    >\r\n                      <option value=\"\">Select planet</option>\r\n                      {planetData.map((planet) => (\r\n                        <option key={planet.name} value={planet.name}>\r\n                          {planet.name}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {/* <option value=\"\">Select planet</option>\r\n                      {planetData.map((planet) => {\r\n                        if (!selectedPlanets.includes(planet.name)) {\r\n                          return (\r\n                            <option key={planet.name} value={planet.name}>\r\n                              {planet.name}\r\n                            </option>\r\n                          );\r\n                        }\r\n                        return null;\r\n                      })} */}\r\n                  </label>\r\n                </div>\r\n                <div className=\"form-column\">\r\n                  {selectedPairs[index]\r\n                    ? selectedPairs[index].planet && (\r\n                        <label>\r\n                          Select Vehicle for{\" \"}\r\n                          {selectedPairs[index] && selectedPairs[index].planet}:\r\n                          <select\r\n                            value={\r\n                              selectedPairs[index]\r\n                                ? selectedPairs[index].vehicle\r\n                                : \"\"\r\n                            }\r\n                            onChange={(e) =>\r\n                              handleVehicleChange(index, e.target.value)\r\n                            }\r\n                            required\r\n                            disabled={\r\n                              selectedPairs[index]\r\n                                ? selectedPairs[index].vehicle\r\n                                : \"\"\r\n                            }\r\n                          >\r\n                            <option value=\"\">Select vehicle</option>\r\n                            {vehicleData\r\n                              .filter((vehicle) => {\r\n                                const selectedPlanet = planetData.find(\r\n                                  (planet) =>\r\n                                    planet.name ===\r\n                                    (selectedPairs[index] &&\r\n                                      selectedPairs[index].planet)\r\n                                );\r\n                                return (\r\n                                  vehicle.max_distance >=\r\n                                  (selectedPlanet ? selectedPlanet.distance : 0)\r\n                                );\r\n                              })\r\n                              .map((vehicle) => (\r\n                                <option key={vehicle.name} value={vehicle.name}>\r\n                                  {vehicle.name} x\r\n                                  {getAvailableVehicle(\r\n                                    selectedPairs[index]\r\n                                      ? selectedPairs[index].planet\r\n                                      : null,\r\n                                    vehicle.name\r\n                                  )}\r\n                                </option>\r\n                              ))}\r\n                          </select>\r\n                        </label>\r\n                      )\r\n                    : null}\r\n                </div>\r\n              </div>\r\n            ))}\r\n            <div className=\"form-row\">\r\n              <div className=\"form-column\">\r\n                <button type=\"submit\">Search</button>\r\n              </div>\r\n              <div className=\"form-column time\">\r\n                Total Time: {timeTaken.reduce((sum, time) => sum + time, 0)}\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FalconMenu;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}